<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>IPLD - InterPlanetary Linked Data on Filecoin Spec</title>
    <link>/docs/libraries/ipld/</link>
    <description>Recent content in IPLD - InterPlanetary Linked Data on Filecoin Spec</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="/docs/libraries/ipld/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>CIDs - Content IDentifiers</title>
      <link>/docs/libraries/ipld/cid/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/libraries/ipld/cid/</guid>
      <description>For most objects referenced by Filecoin, a Content Identifier (CID for short) is used. Any pointer inclusions in the Filecoin spec id files (e.g. &amp;amp;Object) denotes the CID of said object. Some objects explicitly name a CID field. The spec treats these notations interchangeably. This is effectively a hash value, prefixed with its hash function (multihash) as well as extra labels to inform applications about how to deserialize the given data.</description>
    </item>
    
    <item>
      <title>Data Model</title>
      <link>/docs/libraries/ipld/datamodel/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/libraries/ipld/datamodel/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Selectors - IPLD Query Language</title>
      <link>/docs/libraries/ipld/selectors/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/libraries/ipld/selectors/</guid>
      <description>// This is a compression of the IPLD Selector Spec // Full spec: https://github.com/ipld/specs/blob/master/selectors/selectors.md  type Selector union { Matcher ExploreAll ExploreFields ExploreIndex ExploreRange ExploreRecursive ExploreUnion ExploreConditional ExploreRecursiveEdge } // ExploreAll is similar to a `*` -- it traverses all elements of an array, // or all entries in a map, and applies a next selector to the reached nodes. type ExploreAll struct { next Selector } // ExploreFields traverses named fields in a map (or equivalently, struct, if // traversing on typed/schema nodes) and applies a next selector to the // reached nodes.</description>
    </item>
    
  </channel>
</rss>