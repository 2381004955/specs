<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ZigZag Commitments on Filecoin Spec</title>
    <link>/docs/algorithms/porep/porep_commitments/zigzag_commitments/</link>
    <description>Recent content in ZigZag Commitments on Filecoin Spec</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="/docs/algorithms/porep/porep_commitments/zigzag_commitments/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title></title>
      <link>/docs/algorithms/porep/porep_commitments/zigzag_commitments/zigzag_commitments/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/algorithms/porep/porep_commitments/zigzag_commitments/zigzag_commitments/</guid>
      <description></description>
    </item>
    
    <item>
      <title>ZigZag Commitments</title>
      <link>/docs/algorithms/porep/porep_commitments/zigzag_commitments/zigzag_commitments/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/algorithms/porep/porep_commitments/zigzag_commitments/zigzag_commitments/</guid>
      <description>(ql:quickload :orient)     :ORIENT     This section summarizes the ZigZag Commitments algorithm described in Tight PoS - ZigZag. Graph  (defparameter *layers* 6) (defparameter *nodes* 8) (defparameter *regenerate-zigzag-graph* nil) (defparameter *dumped-zigzag-graph* &amp;#39;(:NODES 8 :CHALLENGED-NODE 7 :LAYERS 6 :RENUMBERED-PERMUTATION (:PERM-LIST (8 6 1 5 4 7 3 2) :TYPE PERM) :REVERSED-PERMUTATION (:PERM-LIST (6 1 8 3 7 5 4 2) :TYPE PERM) :TYPE ZIGZAG-GRAPH)) (defparameter *zigzag-graph* (if *regenerate-zigzag-graph* (make-zigzag-graph *nodes* *layers*) (load-from-plist *dumped-zigzag-graph*))) (let ((lg (first (zigzag-graph-layer-graphs *zigzag-graph*)))) (defparameter *comm-d-graph* (make-comm-d-layer-graph (layer-graph-nodes lg) (layer-graph-challenged-node lg)))) (dump *zigzag-graph*)  (:NODES 8 :CHALLENGED-NODE 7 :LAYERS 6 :RENUMBERED-PERMUTATION (:PERM-LIST (8 6 1 5 4 7 3 2) :TYPE PERM) :REVERSED-PERMUTATION (:PERM-LIST (6 1 8 3 7 5 4 2) :TYPE PERM) :TYPE ZIGZAG-GRAPH)  (emit-legend :odd)  (emit-legend :even)   Both renumbered (DRG) and reversed (expander) parents are generated by a pseudorandom permutation and are provided only to illustrate the nature of the zigzag commitment scheme.</description>
    </item>
    
  </channel>
</rss>