import abi "github.com/filecoin-project/specs/actors/abi"
import file "github.com/filecoin-project/specs/systems/filecoin_files/file"

type Path struct {}  // TODO

// SealSeed is unique to each Sector
// SealSeed is:
//    SealSeedHash(MinerID, SectorNumber, SealRandomness, abi.UnsealedSectorCID)
type SealSeed Bytes

// SealVerifyInfo is the structure of all the information a verifier
// needs to verify a Seal.
type SealVerifyInfo struct {
    SectorID               abi.SectorID

    OnChain                OnChainSealVerifyInfo
    Randomness             abi.SealRandomness
    InteractiveRandomness  abi.InteractiveSealRandomness
    UnsealedCID            abi.UnsealedSectorCID  // CommD
}

// OnChainSealVerifyInfo is the structure of information that must be sent with
// a message to commit a sector. Most of this information is not needed in the
// state tree but will be verified in sm.CommitSector. See SealCommitment for
// data stored on the state tree for each sector.
type OnChainSealVerifyInfo struct {
    SealedCID             abi.SealedSectorCID  // CommR
    SealEpoch             abi.ChainEpoch
    InteractiveEpoch      abi.ChainEpoch
    RegisteredProof       abi.RegisteredProof
    Proof                 abi.SealProof
    DealIDs               abi.DealIDs
    SectorNumber          abi.SectorNumber

    IsValidAtSealEpoch()  bool
}

// SealCommitment is the information kept in the state tree about a sector.
// SealCommitment is a subset of OnChainSealVerifyInfo.
type SealCommitment struct {
    SealedCID   abi.SealedSectorCID  // CommR
    DealIDs     abi.DealIDs
    Expiration  abi.ChainEpoch
}

// PersistentProofAux is meta data required to generate certain proofs
// for a sector, for example PoSt.
// These should be stored and indexed somewhere by CommR.
type PersistentProofAux struct {
    CommC              Commitment
    CommQ              Commitment
    CommRLast          Commitment

    // TODO: This may be a partially-cached tree.
    // this may be empty
    CommRLastTreePath  file.Path
}

type ProofAuxTmp struct {
    RegisteredProof  abi.RegisteredProof  // FIXME: Make sure this is supplied.
    PersistentAux    PersistentProofAux  // TODO: Move this to sealer.SealOutputs.

    SectorID         abi.SectorID
    CommD            Commitment
    CommR            abi.SealedSectorCID
    CommDTreePath    file.Path
    CommCTreePath    file.Path
    CommQTreePath    file.Path

    Seed             SealSeed
    KeyLayers        [Bytes]
}

type SealArguments struct {
    RegisteredProof  abi.RegisteredProof
    OutputArtifacts  SealOutputArtifacts
}

// TODO: move into proofs lib
type FilecoinSNARKProof struct {}  //<bls12-381, Groth16>

// TODO
type SealOutputArtifacts struct {}
